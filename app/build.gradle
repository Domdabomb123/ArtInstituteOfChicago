plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "dominicschumerth.artinstituteofchicago"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "dominicschumerth.artinstituteofchicago.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        correctErrorTypes true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    packagingOptions {
        exclude("META-INF/LICENSE.md")
        exclude("META-INF/LICENSE-notice.md")
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.2"
    }
    namespace 'dominicschumerth.artinstituteofchicago'

}

ext {
    groupVersions = [
            navVersion       : '2.5.3',
            lifecycle_version: '2.6.1',
            roomVersion      : '2.4.3',
            pagingVersion    : '3.2.0-alpha05',
            lottieVersion    : '5.2.0',
            retrofitVersion  : '2.9.0',
            mockk            : '1.13.4',
            swipeVersion     : '1.1.0',
            compose             : "1.4.3",
            compose_activity    : "1.7.1",
            compose_material3   : "1.1.0",
            compose_paging      : "1.0.0-alpha19",
            coroutines         : "1.6.4",
            accompanist         : "0.27.0"
    ]
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter'
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${groupVersions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${groupVersions.coroutines}"

    //Compose
    implementation "androidx.activity:activity-compose:${groupVersions.compose_activity}"
    implementation "androidx.compose.ui:ui:${groupVersions.compose}"
    implementation "androidx.compose.ui:ui-graphics:${groupVersions.compose}"
    implementation "androidx.compose.ui:ui-tooling:${groupVersions.compose}"
    implementation "androidx.compose.ui:ui-tooling-preview:${groupVersions.compose}"
    implementation "androidx.compose.material3:material3:${groupVersions.compose_material3}"
    implementation "androidx.compose.runtime:runtime:${groupVersions.compose}"
    implementation "androidx.compose.runtime:runtime-livedata:${groupVersions.compose}"
    implementation "androidx.compose.foundation:foundation:${groupVersions.compose}"
    implementation "androidx.compose.foundation:foundation-layout:${groupVersions.compose}"
    implementation "androidx.compose.animation:animation:${groupVersions.compose}"
    implementation "com.google.accompanist:accompanist-navigation-animation:${groupVersions.accompanist}"
    implementation "androidx.paging:paging-compose:${groupVersions.compose_paging}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${groupVersions.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${groupVersions.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${groupVersions.retrofitVersion}"
    implementation "com.google.code.gson:gson:${groupVersions.retrofitVersion}"

    //coil
    implementation "io.coil-kt:coil-compose:1.3.2"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //hiltViewModel
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0-alpha01"

//    // For local unit tests
//    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
//    testAnnotationProcessor "com.google.dagger:hilt-compiler:$hilt_version"

//    //mockk
//    testImplementation "io.mockk:mockk:${groupVersions.mockk}"
//    androidTestImplementation "io.mockk:mockk-android:${groupVersions.mockk}"

    //LifeCycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${groupVersions.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${groupVersions.lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:${groupVersions.lifecycleVersion}"

    //Room
    implementation "androidx.room:room-runtime:${groupVersions.roomVersion}"
    implementation "androidx.room:room-ktx:${groupVersions.roomVersion}"
    kapt "androidx.room:room-compiler:${groupVersions.roomVersion}"

    implementation "androidx.paging:paging-runtime-ktx:${groupVersions.pagingVersion}"
    implementation "androidx.paging:paging-common-ktx:${groupVersions.pagingVersion}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${groupVersions.swipeVersion}"

    //Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "android.arch.core:core-testing:1.1.1"
    androidTestImplementation "androidx.test:rules:$test_version"
    implementation "androidx.test:core:$test_version"
    androidTestImplementation "androidx.test:core-ktx:$test_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.room:room-testing:2.5.1"

    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:${groupVersions.compose}")
    // Needed for createAndroidComposeRule, but not createComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:${groupVersions.compose}")
    // Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    // Hilt - testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //google.truth:truth
    testImplementation "com.google.truth:truth:$googleTruthVersion"
    androidTestImplementation "com.google.truth:truth:$googleTruthVersion"

    //modules
    implementation project(path: ':api')
    implementation project(path: ':abstractions')
    implementation project(path: ':database')
}
